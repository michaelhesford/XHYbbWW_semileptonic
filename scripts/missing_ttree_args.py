import subprocess, os
'''
Find snapshot jobs with missing ttrees based on the output of ttree_test.py, then output the missing job arguments to a txt file
'''

'''
groups = [
'XHY-320-70',
'XHY-280-125',
'XHY-300-60',
'XHY-300-80',
'XHY-300-100',
'XHY-300-150',
'XHY-320-80',
'XHY-240-60',
'XHY-240-70',
'XHY-240-80',
'XHY-240-90',
'XHY-240-100',
'XHY-280-60',
'XHY-280-70',
'XHY-280-80',
'XHY-280-90',
'XHY-280-100',
'XHY-280-150',
'XHY-300-70',
'XHY-300-90',
'XHY-300-125',
'XHY-320-60',
'XHY-320-90',
'XHY-360-60',
'XHY-1000-250',
'XHY-1000-350',
'XHY-320-100',
'XHY-320-125',
'XHY-320-150',
'XHY-360-70',
'XHY-360-80',
'XHY-360-90',
'XHY-360-100',
'XHY-360-125',
'XHY-360-150',
'XHY-400-60',
'XHY-400-70',
'XHY-400-80',
'XHY-400-90',
'XHY-400-100',
'XHY-400-125',
'XHY-400-150',
'XHY-400-250',
'XHY-500-60',
'XHY-500-70',
'XHY-500-80',
'XHY-500-90',
'XHY-500-100',
'XHY-500-125',
'XHY-500-150',
'XHY-500-250',
'XHY-500-300',
'XHY-600-60',
'XHY-600-70',
'XHY-600-80',
'XHY-600-90',
'XHY-600-100',
'XHY-600-125',
'XHY-600-150',
'XHY-600-250',
'XHY-600-300',
'XHY-600-400',
'XHY-700-60',
'XHY-700-70',
'XHY-700-80',
'XHY-700-90',
'XHY-700-100',
'XHY-700-125',
'XHY-700-150',
'XHY-700-250',
'XHY-700-300',
'XHY-700-400',
'XHY-700-500',
'XHY-800-60',
'XHY-800-70',
'XHY-800-80',
'XHY-800-90',
'XHY-800-100',
'XHY-800-125',
'XHY-800-150',
'XHY-800-250',
'XHY-800-300',
'XHY-800-400',
'XHY-800-500',
'XHY-800-600',
'XHY-900-60',
'XHY-900-70',
'XHY-900-80',
'XHY-900-90',
'XHY-900-100',
'XHY-900-125',
'XHY-900-150',
'XHY-900-250',
'XHY-900-300',
'XHY-900-400',
'XHY-900-500',
'XHY-900-600',
'XHY-900-700',
'XHY-1000-60',
'XHY-1000-70',
'XHY-1000-80',
'XHY-1000-90',
'XHY-1000-100',
'XHY-1000-125',
'XHY-1000-150',
'XHY-1000-190',
'XHY-1000-300',
'XHY-1000-400',
'XHY-1000-450',
'XHY-1000-500',
'XHY-1000-600',
'XHY-1000-700',
'XHY-1000-800',
'XHY-1200-60',
'XHY-1200-70',
'XHY-1200-80',
'XHY-1200-90',
'XHY-1200-100',
'XHY-1200-125',
'XHY-1200-150',
'XHY-1200-190',
'XHY-1200-250',
'XHY-1200-300',
'XHY-1200-350',
'XHY-1200-400',
'XHY-1200-450',
'XHY-1200-500',
'XHY-1200-600',
'XHY-1200-700',
'XHY-1200-800',
'XHY-1200-900',
'XHY-1200-1000',
'XHY-1400-60',
'XHY-1400-70',
'XHY-1400-80',
'XHY-1400-90',
'XHY-1400-100',
'XHY-1400-125',
'XHY-1400-150',
'XHY-1400-190',
'XHY-1400-250',
'XHY-1400-300',
'XHY-1400-350',
'XHY-1400-400',
'XHY-1400-450',
'XHY-1400-500',
'XHY-1400-600',
'XHY-1400-700',
'XHY-1400-800',
'XHY-1400-900',
'XHY-1400-1000',
'XHY-1400-1100',
'XHY-1400-1200',
'XHY-1600-60',
'XHY-1600-70',
'XHY-1600-80',
'XHY-1600-90',
'XHY-1600-100',
'XHY-1600-125',
'XHY-1600-150',
'XHY-1600-190',
'XHY-1600-250',
'XHY-1600-300',
'XHY-1600-350',
'XHY-1600-400',
'XHY-1600-450',
'XHY-1600-500',
'XHY-1600-600',
'XHY-1600-700',
'XHY-1600-800',
'XHY-1600-900',
'XHY-1600-1000',
'XHY-1600-1100',
'XHY-1600-1200',
'XHY-1600-1300',
'XHY-1600-1400',
'XHY-1800-60',
'XHY-1800-70',
'XHY-1800-80',
'XHY-1800-90',
'XHY-1800-100',
'XHY-1800-125',
'XHY-1800-150',
'XHY-1800-190',
'XHY-1800-250',
'XHY-1800-300',
'XHY-1800-350',
'XHY-1800-400',
'XHY-1800-450',
'XHY-1800-500',
'XHY-1800-600',
'XHY-1800-700',
'XHY-1800-800',
'XHY-1800-900',
'XHY-1800-1000',
'XHY-1800-1100',
'XHY-1800-1200',
'XHY-1800-1300',
'XHY-1800-1400',
'XHY-1800-1600',
'XHY-2000-60',
'XHY-2000-70',
'XHY-2000-80',
'XHY-2000-90',
'XHY-2000-100',
'XHY-2000-125',
'XHY-2000-150',
'XHY-2000-190',
'XHY-2000-250',
'XHY-2000-300',
'XHY-2000-350',
'XHY-2000-400',
'XHY-2000-450',
'XHY-2000-500',
'XHY-2000-600',
'XHY-2000-700',
'XHY-2000-800',
'XHY-2000-900',
'XHY-2000-1000',
'XHY-2000-1100',
'XHY-2000-1200',
'XHY-2000-1300',
'XHY-2000-1400',
'XHY-2000-1600',
'XHY-2000-1800',
'XHY-2200-60',
'XHY-2200-70',
'XHY-2200-80',
'XHY-2200-90',
'XHY-2200-100',
'XHY-2200-125',
'XHY-2200-150',
'XHY-2200-190',
'XHY-2200-250',
'XHY-2200-300',
'XHY-2200-350',
'XHY-2200-400',
'XHY-2200-450',
'XHY-2200-500',
'XHY-2200-600',
'XHY-2200-700',
'XHY-2200-800',
'XHY-2200-900',
'XHY-2200-1000',
'XHY-2200-1100',
'XHY-2200-1200',
'XHY-2200-1300',
'XHY-2200-1400',
'XHY-2200-1600',
'XHY-2200-1800',
'XHY-2200-2000',
'XHY-2400-60',
'XHY-2400-70',
'XHY-2400-80',
'XHY-2400-90',
'XHY-2400-100',
'XHY-2400-125',
'XHY-2400-150',
'XHY-2400-190',
'XHY-2400-250',
'XHY-2400-300',
'XHY-2400-350',
'XHY-2400-400',
'XHY-2400-450',
'XHY-2400-500',
'XHY-2400-600',
'XHY-2400-700',
'XHY-2400-800',
'XHY-2400-1000',
'XHY-2400-1100',
'XHY-2400-1200',
'XHY-2400-1300',
'XHY-2400-1400',
'XHY-2400-1600',
'XHY-2400-1800',
'XHY-2400-2000',
'XHY-2400-2200',
'XHY-2500-60',
'XHY-2500-70',
'XHY-2500-80',
'XHY-2500-90',
'XHY-2500-100',
'XHY-2500-125',
'XHY-2500-150',
'XHY-2500-190',
'XHY-2500-250',
'XHY-2500-300',
'XHY-2500-350',
'XHY-2500-400',
'XHY-2500-450',
'XHY-2500-500',
'XHY-2500-600',
'XHY-2500-700',
'XHY-2500-800',
'XHY-2500-900',
'XHY-2500-1000',
'XHY-2500-1100',
'XHY-2500-1200',
'XHY-2500-1300',
'XHY-2500-1400',
'XHY-2500-1600',
'XHY-2500-1800',
'XHY-2500-2000',
'XHY-2500-2200',
'XHY-2600-60',
'XHY-2600-70',
'XHY-2600-80',
'XHY-2600-90',
'XHY-2600-100',
'XHY-2600-125',
'XHY-2600-150',
'XHY-2600-190',
'XHY-2600-250',
'XHY-2600-300',
'XHY-2600-350',
'XHY-2600-400',
'XHY-2600-450',
'XHY-2600-500',
'XHY-2600-600',
'XHY-2600-700',
'XHY-2600-800',
'XHY-2600-900',
'XHY-2600-1000',
'XHY-2600-1100',
'XHY-2600-1200',
'XHY-2600-1300',
'XHY-2600-1400',
'XHY-2600-1600',
'XHY-2600-1800',
'XHY-2600-2000',
'XHY-2600-2200',
'XHY-2600-2400',
'XHY-2800-60',
'XHY-2800-70',
'XHY-2800-80',
'XHY-2800-90',
'XHY-2800-100',
'XHY-2800-125',
'XHY-2800-150',
'XHY-2800-190',
'XHY-2800-250',
'XHY-2800-300',
'XHY-2800-350',
'XHY-2800-400',
'XHY-2800-450',
'XHY-2800-500',
'XHY-2800-600',
'XHY-2800-700',
'XHY-2800-800',
'XHY-2800-900',
'XHY-2800-1000',
'XHY-2800-1100',
'XHY-2800-1200',
'XHY-2800-1300',
'XHY-2800-1400',
'XHY-2800-1600',
'XHY-2800-1800',
'XHY-2800-2000',
'XHY-2800-2200',
'XHY-2800-2400',
'XHY-2800-2500',
'XHY-2800-2600',
'XHY-3000-60',
'XHY-3000-70',
'XHY-3000-80',
'XHY-3000-90',
'XHY-3000-100',
'XHY-3000-125',
'XHY-3000-150',
'XHY-3000-190',
'XHY-3000-250',
'XHY-3000-300',
'XHY-3000-350',
'XHY-3000-400',
'XHY-3000-450',
'XHY-3000-500',
'XHY-3000-600',
'XHY-3000-700',
'XHY-3000-800',
'XHY-2400-900',
'XHY-3500-100',
'XHY-3500-900',
'XHY-3000-900',
'XHY-3000-1000',
'XHY-3000-1100',
'XHY-3000-1200',
'XHY-3000-1300',
'XHY-3000-1400',
'XHY-3000-1600',
'XHY-3000-1800',
'XHY-3000-2000',
'XHY-3000-2200',
'XHY-3000-2400',
'XHY-3000-2500',
'XHY-3000-2600',
'XHY-3000-2800',
'XHY-3500-60',
'XHY-3500-70',
'XHY-3500-80',
'XHY-3500-90',
'XHY-3500-125',
'XHY-3500-150',
'XHY-3500-190',
'XHY-3500-250',
'XHY-3500-300',
'XHY-3500-350',
'XHY-3500-400',
'XHY-3500-450',
'XHY-3500-500',
'XHY-3500-600',
'XHY-3500-700',
'XHY-3500-800',
'XHY-3500-1000',
'XHY-3500-1100',
'XHY-3500-1200',
'XHY-3500-1300',
'XHY-3500-1400',
'XHY-3500-1600',
'XHY-3500-1800',
'XHY-3500-2000',
'XHY-3500-2200',
'XHY-3500-2400',
'XHY-3500-2500',
'XHY-3500-2600',
'XHY-3500-2800',
'XHY-4000-60',
'XHY-4000-70',
'XHY-4000-80',
'XHY-4000-90',
'XHY-4000-100',
'XHY-4000-125',
'XHY-4000-150',
'XHY-4000-190',
'XHY-4000-250',
'XHY-4000-300',
'XHY-4000-350',
'XHY-4000-400',
'XHY-4000-450',
'XHY-4000-500',
'XHY-4000-600',
'XHY-4000-700',
'XHY-4000-800',
'XHY-4000-900',
'XHY-4000-1000',
'XHY-4000-1100',
'XHY-4000-1200',
'XHY-4000-1300',
'XHY-4000-1400',
'XHY-4000-1600',
'XHY-4000-1800',
'XHY-4000-2000',
'XHY-4000-2200',
'XHY-4000-2400',
'XHY-4000-2500',
'XHY-4000-2600',
'XHY-4000-2800',
'''

groups = [
'SingleMuonDataA_18',
'SingleMuonDataB_16APV',
'SingleMuonDataB_17',
'SingleMuonDataB_18',
'SingleMuonDataC_16APV',
'SingleMuonDataC_17',
'SingleMuonDataC_18',
'SingleMuonDataD_16APV',
'SingleMuonDataD_17',
'SingleMuonDataD_18',
'SingleMuonDataE_16APV',
'SingleMuonDataE_17',
'SingleMuonDataF_16',
'SingleMuonDataF_16APV',
'SingleMuonDataF_17',
'SingleMuonDataG_16',
'SingleMuonDataH_16',
'EGammaDataA_18',
'EGammaDataB_18',
'EGammaDataC_18',
'EGammaDataD_18',
'SingleElectronDataB_17',
'SingleElectronDataC_17',
'SingleElectronDataD_17',
'SingleElectronDataE_17',
'SingleElectronDataF_17',
'SingleElectronDataF_16',
'SingleElectronDataG_16',
'SingleElectronDataH_16',
'SingleElectronDataB_16APV',
'SingleElectronDataC_16APV',
'SingleElectronDataD_16APV',
'SingleElectronDataE_16APV',
'SingleElectronDataF_16APV',
'SinglePhotonDataB_17',
'SinglePhotonDataC_17',
'SinglePhotonDataD_17',
'SinglePhotonDataE_17',
'SinglePhotonDataF_17',
'SinglePhotonDataF_16',
'SinglePhotonDataG_16',
'SinglePhotonDataH_16',
'SinglePhotonDataB_16APV',
'SinglePhotonDataC_16APV',
'SinglePhotonDataD_16APV',
'SinglePhotonDataE_16APV',
'SinglePhotonDataF_16APV',
'ttbar-allhad',
'ttbar-semilep',
'ST-t',
'STbar-t',
'ST-shad',
'ST-slep',
'ST-tW',
'STbar-tW',
'WJetsHT400',
'WJetsHT600',
'WJetsHT800',
'WJetsLepHT200',
'WJetsLepHT400',
'WJetsLepHT600',
'WJetsLepHT800',
'WJetsLepHT1200',
'WJetsLepHT2500',
'ZJetsHT200',
'ZJetsHT400',
'ZJetsHT600',
'ZJetsHT800',
'DYJetsM4HT100',
'DYJetsM4HT200',
'DYJetsM4HT400',
'DYJetsM4HT600',
'DYJetsM50HT100',
'DYJetsM50HT200',
'DYJetsM50HT400',
'DYJetsM50HT600',
'DYJetsM50HT800',
'DYJetsM50HT1200',
'DYJetsM50HT2500',
]

out = open('condor/missing_PNETttree_args.txt','w')
redirector = 'root://cmseos.fnal.gov/'
for g in groups:
    if not 'Data' in g:
        for year in ['16APV','16','17','18']:
            jobs = []
            #eos_path = '/store/user/mhesford/XHYbbWW_semileptonic/ttree_test/PNettree_test_{}_{}_*'.format(g,year)
            eos_path = '/store/user/mhesford/XHYbbWW_semileptonic/ttree_test/ttree_test_{}_{}_*'.format(g,year)
            cmd = 'eos {} ls {}'.format(redirector,eos_path)
            rawFiles = subprocess.check_output(cmd, shell=True).decode()
            files = rawFiles.split('\n')
            if len(files) == 1:
                if 'XHY' in g: #Assume just 1 job needed
                    #print('Missing 1 of 1 total jobs for 20{} {}'.format(year,g))
                    #out.write('-s %s -y %s -j 1 -n 1 \n'%(g,year))
                    continue
                else:
                    print('no files for 20{} {}'.format(year,g))
                    continue
            #file name: ttree_test_ttbar-allhad_17_<JOB>_<NJOBS>.root
            njobs = int(files[0].split('.')[0].split('_')[-1])
            for f in files:
                if f == '': #this string appears at the end of the files list for some reason
                    continue
                ijob = int(f.split('_')[-2]) #this relies on a consistent format for output files
                jobs.append(ijob)
            #snapfile = open('PNetSnapshots/{}_{}_PNetSnapshot.txt'.format(g,year),'r').readlines()
            snapfile = open('snapshots/{}_{}_snapshot.txt'.format(g,year),'r').readlines()
            njobs_snap = snapfile[0].split('_')[-1].split('.')[0]
            njob_miss = 0
            for job in range(1,njobs+1):
                if not job in jobs:
                    print('Missing job number {}'.format(job))
                    #print(snapfile[job-1].split('.')[0])
                    job_snap = snapfile[job-1].split('_')[-2]
                    out.write('-s %s -y %s -j %s -n %s \n'%(g,year,job_snap,njobs_snap)) 
                    njob_miss += 1
            print('Missing {} of {} total jobs for 20{} {}'.format(njob_miss,njobs,year,g))
    else:
        jobs = []
        setname = g.split('_')[0]
        year = g.split('_')[1]
        #eos_path = '/store/user/mhesford/XHYbbWW_semileptonic/ttree_test/PNettree_test_{}_{}_*'.format(setname,year)
        eos_path = '/store/user/mhesford/XHYbbWW_semileptonic/ttree_test/ttree_test_{}_{}_*'.format(setname,year)
        cmd = 'eos {} ls {}'.format(redirector,eos_path)
        rawFiles = subprocess.check_output(cmd, shell=True).decode()
        files = rawFiles.split('\n')
        if len(files) == 1:
            print('no files for 20{} {}'.format(year,setname))
            continue
        #file name: ttree_test_ttbar-allhad_17_<JOB>_<NJOBS>.root
        njobs = int(files[0].split('.')[0].split('_')[-1])
        for f in files:
            if f == '': #this string appears at the end of the files list for some reason
                continue
            ijob = int(f.split('_')[-2]) #this relies on a consistent format for output files
            jobs.append(ijob)
        #snapfile = open('PNetSnapshots/{}_{}_PNetSnapshot.txt'.format(setname,year),'r').readlines()
        #snapfile = open('raw_nano/{}_{}.txt'.format(setname,year),'r').readlines()
        snapfile = open('snapshots/{}_{}_snapshot.txt'.format(setname,year),'r').readlines()
        njob_miss = 0
        njobs_snap = snapfile[0].split('_')[-1].split('.')[0]
        for job in range(1,njobs+1):
            if not job in jobs:
                print('Missing job number {}'.format(job))
                job_snap = snapfile[job-1].split('_')[-2]
                out.write('-s %s -y %s -j %s -n %s \n'%(setname,year,job_snap,njobs_snap))
                #out.write('-s %s -y %s -j %s -n %s \n'%(setname,year,job,njobs))
                njob_miss += 1
        print('Missing {} of {} total jobs for 20{} {}'.format(njob_miss,njobs,year,setname))
out.close()
